Steiner Tree LP/MIP Solver

program path  : /home/robert/Documents/studies/discrete_mathematics/steiner-trees/cmake-build-debug/steiner_trees
instance path : instances/undirected_cut_based_01
instance name : undirected_cut_based_01

instances/undirected_cut_based_01/undirected_cut_based_01.json
{
    "graph": {
        "directed": false,
        "edges": [
            {
                "head": 1,
                "id": 0,
                "tail": 0,
                "weight": 1
            },
            {
                "head": 4,
                "id": 1,
                "tail": 0,
                "weight": 1
            },
            {
                "head": 2,
                "id": 2,
                "tail": 1,
                "weight": 1
            },
            {
                "head": 5,
                "id": 3,
                "tail": 1,
                "weight": 1
            },
            {
                "head": 3,
                "id": 4,
                "tail": 2,
                "weight": 1
            },
            {
                "head": 6,
                "id": 5,
                "tail": 2,
                "weight": 1
            },
            {
                "head": 0,
                "id": 6,
                "tail": 3,
                "weight": 1
            },
            {
                "head": 7,
                "id": 7,
                "tail": 3,
                "weight": 1
            },
            {
                "head": 5,
                "id": 8,
                "tail": 4,
                "weight": 1
            },
            {
                "head": 6,
                "id": 8,
                "tail": 5,
                "weight": 1
            },
            {
                "head": 7,
                "id": 8,
                "tail": 6,
                "weight": 1
            },
            {
                "head": 4,
                "id": 8,
                "tail": 7,
                "weight": 1
            }
        ],
        "weighted": true
    },
    "nets": [
        {
            "name": "net_0",
            "terminals": [
                0,
                2,
                5,
                7
            ]
        }
    ]
}

Directed Weighted Graph with 8 nodes and 24 edges

Node 0 with 3 incoming edges and 3 outgoing edges
[1] = 1 --( 1 )--> 0
[3] = 4 --( 1 )--> 0
[12] = 3 --( 1 )--> 0
[0] = 0 --( 1 )--> 1
[2] = 0 --( 1 )--> 4
[13] = 0 --( 1 )--> 3

Node 1 with 3 incoming edges and 3 outgoing edges
[0] = 0 --( 1 )--> 1
[5] = 2 --( 1 )--> 1
[7] = 5 --( 1 )--> 1
[1] = 1 --( 1 )--> 0
[4] = 1 --( 1 )--> 2
[6] = 1 --( 1 )--> 5

Node 2 with 3 incoming edges and 3 outgoing edges
[4] = 1 --( 1 )--> 2
[9] = 3 --( 1 )--> 2
[11] = 6 --( 1 )--> 2
[5] = 2 --( 1 )--> 1
[8] = 2 --( 1 )--> 3
[10] = 2 --( 1 )--> 6

Node 3 with 3 incoming edges and 3 outgoing edges
[8] = 2 --( 1 )--> 3
[13] = 0 --( 1 )--> 3
[15] = 7 --( 1 )--> 3
[9] = 3 --( 1 )--> 2
[12] = 3 --( 1 )--> 0
[14] = 3 --( 1 )--> 7

Node 4 with 3 incoming edges and 3 outgoing edges
[2] = 0 --( 1 )--> 4
[17] = 5 --( 1 )--> 4
[22] = 7 --( 1 )--> 4
[3] = 4 --( 1 )--> 0
[16] = 4 --( 1 )--> 5
[23] = 4 --( 1 )--> 7

Node 5 with 3 incoming edges and 3 outgoing edges
[6] = 1 --( 1 )--> 5
[16] = 4 --( 1 )--> 5
[19] = 6 --( 1 )--> 5
[7] = 5 --( 1 )--> 1
[17] = 5 --( 1 )--> 4
[18] = 5 --( 1 )--> 6

Node 6 with 3 incoming edges and 3 outgoing edges
[10] = 2 --( 1 )--> 6
[18] = 5 --( 1 )--> 6
[21] = 7 --( 1 )--> 6
[11] = 6 --( 1 )--> 2
[19] = 6 --( 1 )--> 5
[20] = 6 --( 1 )--> 7

Node 7 with 3 incoming edges and 3 outgoing edges
[14] = 3 --( 1 )--> 7
[20] = 6 --( 1 )--> 7
[23] = 4 --( 1 )--> 7
[15] = 7 --( 1 )--> 3
[21] = 7 --( 1 )--> 6
[22] = 7 --( 1 )--> 4

Edges
[0] = 0 --( 1 )--> 1
[1] = 1 --( 1 )--> 0
[2] = 0 --( 1 )--> 4
[3] = 4 --( 1 )--> 0
[4] = 1 --( 1 )--> 2
[5] = 2 --( 1 )--> 1
[6] = 1 --( 1 )--> 5
[7] = 5 --( 1 )--> 1
[8] = 2 --( 1 )--> 3
[9] = 3 --( 1 )--> 2
[10] = 2 --( 1 )--> 6
[11] = 6 --( 1 )--> 2
[12] = 3 --( 1 )--> 0
[13] = 0 --( 1 )--> 3
[14] = 3 --( 1 )--> 7
[15] = 7 --( 1 )--> 3
[16] = 4 --( 1 )--> 5
[17] = 5 --( 1 )--> 4
[18] = 5 --( 1 )--> 6
[19] = 6 --( 1 )--> 5
[20] = 6 --( 1 )--> 7
[21] = 7 --( 1 )--> 6
[22] = 7 --( 1 )--> 4
[23] = 4 --( 1 )--> 7
[GroupManager] add group GroupEdges
[GroupManager] add group GroupSteinerTreeCuts
[MIPSolver] number of variables   = 24
[MIPSolver] number of constraints = 112
[MIPSolver] Problem solved in 9 milliseconds.
[MIPSolver] optimal objective value = 4.5
[GroupManager] compute solution for group GroupEdges

Solution GroupEdges
Edge[0] = {(0, 1), weight = 1.000000} (0), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0
Edge[1] = {(1, 0), weight = 1.000000} (1), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0.5
Edge[2] = {(0, 4), weight = 1.000000} (2), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0
Edge[3] = {(4, 0), weight = 1.000000} (3), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0.5
Edge[4] = {(1, 2), weight = 1.000000} (4), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0
Edge[5] = {(2, 1), weight = 1.000000} (5), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0.5
Edge[6] = {(1, 5), weight = 1.000000} (6), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0
Edge[7] = {(5, 1), weight = 1.000000} (7), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0.5
Edge[8] = {(2, 3), weight = 1.000000} (8), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0
Edge[9] = {(3, 2), weight = 1.000000} (9), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0
Edge[10] = {(2, 6), weight = 1.000000} (10), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0.5
Edge[11] = {(6, 2), weight = 1.000000} (11), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0
Edge[12] = {(3, 0), weight = 1.000000} (12), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0
Edge[13] = {(0, 3), weight = 1.000000} (13), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0
Edge[14] = {(3, 7), weight = 1.000000} (14), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0
Edge[15] = {(7, 3), weight = 1.000000} (15), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0
Edge[16] = {(4, 5), weight = 1.000000} (16), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0
Edge[17] = {(5, 4), weight = 1.000000} (17), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0.5
Edge[18] = {(5, 6), weight = 1.000000} (18), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0
Edge[19] = {(6, 5), weight = 1.000000} (19), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0.5
Edge[20] = {(6, 7), weight = 1.000000} (20), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0
Edge[21] = {(7, 6), weight = 1.000000} (21), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0.5
Edge[22] = {(7, 4), weight = 1.000000} (22), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0.5
Edge[23] = {(4, 7), weight = 1.000000} (23), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0

[GroupManager] compute solution for group GroupSteinerTreeCuts
[GroupManager] add group GroupEdges
[GroupManager] add group GroupSteinerTreeCuts
[MIPSolver] number of variables   = 24
[MIPSolver] number of constraints = 112
[MIPSolver] Problem solved in 15 milliseconds.
[MIPSolver] optimal objective value = 5
[GroupManager] compute solution for group GroupEdges

Solution GroupEdges
Edge[0] = {(0, 1), weight = 1.000000} (0), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0
Edge[1] = {(1, 0), weight = 1.000000} (1), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0
Edge[2] = {(0, 4), weight = 1.000000} (2), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0
Edge[3] = {(4, 0), weight = 1.000000} (3), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0
Edge[4] = {(1, 2), weight = 1.000000} (4), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0
Edge[5] = {(2, 1), weight = 1.000000} (5), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0
Edge[6] = {(1, 5), weight = 1.000000} (6), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0
Edge[7] = {(5, 1), weight = 1.000000} (7), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0
Edge[8] = {(2, 3), weight = 1.000000} (8), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 1
Edge[9] = {(3, 2), weight = 1.000000} (9), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0
Edge[10] = {(2, 6), weight = 1.000000} (10), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0
Edge[11] = {(6, 2), weight = 1.000000} (11), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 1
Edge[12] = {(3, 0), weight = 1.000000} (12), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 1
Edge[13] = {(0, 3), weight = 1.000000} (13), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0
Edge[14] = {(3, 7), weight = 1.000000} (14), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0
Edge[15] = {(7, 3), weight = 1.000000} (15), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0
Edge[16] = {(4, 5), weight = 1.000000} (16), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0
Edge[17] = {(5, 4), weight = 1.000000} (17), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0
Edge[18] = {(5, 6), weight = 1.000000} (18), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 1
Edge[19] = {(6, 5), weight = 1.000000} (19), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0
Edge[20] = {(6, 7), weight = 1.000000} (20), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0
Edge[21] = {(7, 6), weight = 1.000000} (21), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 1
Edge[22] = {(7, 4), weight = 1.000000} (22), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0
Edge[23] = {(4, 7), weight = 1.000000} (23), Net[0] = {name = net_0, terminals = {0, 2, 5, 7}, weight = 1.000000} : 0

[GroupManager] compute solution for group GroupSteinerTreeCuts
instances/undirected_cut_based_01/solution_undirected_cut_based_01.json
{
    "problem": {
        "graph": {
            "directed": true,
            "edges": [
                {
                    "head": 1,
                    "id": 0,
                    "tail": 0,
                    "weight": 1.0
                },
                {
                    "head": 0,
                    "id": 1,
                    "tail": 1,
                    "weight": 1.0
                },
                {
                    "head": 4,
                    "id": 2,
                    "tail": 0,
                    "weight": 1.0
                },
                {
                    "head": 0,
                    "id": 3,
                    "tail": 4,
                    "weight": 1.0
                },
                {
                    "head": 2,
                    "id": 4,
                    "tail": 1,
                    "weight": 1.0
                },
                {
                    "head": 1,
                    "id": 5,
                    "tail": 2,
                    "weight": 1.0
                },
                {
                    "head": 5,
                    "id": 6,
                    "tail": 1,
                    "weight": 1.0
                },
                {
                    "head": 1,
                    "id": 7,
                    "tail": 5,
                    "weight": 1.0
                },
                {
                    "head": 3,
                    "id": 8,
                    "tail": 2,
                    "weight": 1.0
                },
                {
                    "head": 2,
                    "id": 9,
                    "tail": 3,
                    "weight": 1.0
                },
                {
                    "head": 6,
                    "id": 10,
                    "tail": 2,
                    "weight": 1.0
                },
                {
                    "head": 2,
                    "id": 11,
                    "tail": 6,
                    "weight": 1.0
                },
                {
                    "head": 0,
                    "id": 12,
                    "tail": 3,
                    "weight": 1.0
                },
                {
                    "head": 3,
                    "id": 13,
                    "tail": 0,
                    "weight": 1.0
                },
                {
                    "head": 7,
                    "id": 14,
                    "tail": 3,
                    "weight": 1.0
                },
                {
                    "head": 3,
                    "id": 15,
                    "tail": 7,
                    "weight": 1.0
                },
                {
                    "head": 5,
                    "id": 16,
                    "tail": 4,
                    "weight": 1.0
                },
                {
                    "head": 4,
                    "id": 17,
                    "tail": 5,
                    "weight": 1.0
                },
                {
                    "head": 6,
                    "id": 18,
                    "tail": 5,
                    "weight": 1.0
                },
                {
                    "head": 5,
                    "id": 19,
                    "tail": 6,
                    "weight": 1.0
                },
                {
                    "head": 7,
                    "id": 20,
                    "tail": 6,
                    "weight": 1.0
                },
                {
                    "head": 6,
                    "id": 21,
                    "tail": 7,
                    "weight": 1.0
                },
                {
                    "head": 4,
                    "id": 22,
                    "tail": 7,
                    "weight": 1.0
                },
                {
                    "head": 7,
                    "id": 23,
                    "tail": 4,
                    "weight": 1.0
                }
            ],
            "weighted": true
        },
        "nets": [
            {
                "id": 0,
                "name": "net_0",
                "terminals": [
                    0,
                    2,
                    5,
                    7
                ]
            }
        ]
    },
    "solution": {
        "continuous": {
            "edges": {
                "0": 0.0,
                "1": 0.5,
                "10": 0.5,
                "11": 0.0,
                "12": 0.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0,
                "16": 0.0,
                "17": 0.5,
                "18": 0.0,
                "19": 0.5,
                "2": 0.0,
                "20": 0.0,
                "21": 0.5,
                "22": 0.5,
                "23": 0.0,
                "3": 0.5,
                "4": 0.0,
                "5": 0.5,
                "6": 0.0,
                "7": 0.5,
                "8": 0.0,
                "9": 0.0
            },
            "optimization": {
                "objective_value": 4.5,
                "problem": "LP",
                "type": "min"
            }
        },
        "integer": {
            "edges": {
                "0": 0.0,
                "1": 0.0,
                "10": 0.0,
                "11": 1.0,
                "12": 1.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0,
                "16": 0.0,
                "17": 0.0,
                "18": 1.0,
                "19": 0.0,
                "2": 0.0,
                "20": 0.0,
                "21": 1.0,
                "22": 0.0,
                "23": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 1.0,
                "9": 0.0
            },
            "optimization": {
                "objective_value": 5.0,
                "problem": "MIP",
                "type": "min"
            }
        }
    }
}

