Steiner Tree LP/MIP Solver

program path  : /home/robert/Documents/studies/discrete_mathematics/steiner-trees/cmake-build-debug/steiner_trees
instance path : instances/undirected_cut_based
instance name : undirected_cut_based

instances/undirected_cut_based/undirected_cut_based.json
{
    "graph": {
        "directed": false,
        "edges": [
            {
                "head": 1,
                "id": 0,
                "tail": 0,
                "weight": 1
            },
            {
                "head": 2,
                "id": 1,
                "tail": 0,
                "weight": 1
            },
            {
                "head": 3,
                "id": 2,
                "tail": 0,
                "weight": 1
            },
            {
                "head": 4,
                "id": 3,
                "tail": 1,
                "weight": 1
            },
            {
                "head": 5,
                "id": 4,
                "tail": 1,
                "weight": 1
            },
            {
                "head": 5,
                "id": 5,
                "tail": 2,
                "weight": 1
            },
            {
                "head": 6,
                "id": 6,
                "tail": 2,
                "weight": 1
            },
            {
                "head": 6,
                "id": 7,
                "tail": 3,
                "weight": 1
            },
            {
                "head": 4,
                "id": 8,
                "tail": 3,
                "weight": 1
            }
        ],
        "weighted": true
    },
    "nets": [
        {
            "name": "net_0",
            "terminals": [
                0,
                4,
                5,
                6
            ]
        }
    ]
}

Weighted Graph with 7 nodes and 9 edges

Node 0 with 3 incident edges
[0] = 0 --( 1 )-- 1
[1] = 0 --( 1 )-- 2
[2] = 0 --( 1 )-- 3

Node 1 with 3 incident edges
[0] = 0 --( 1 )-- 1
[3] = 1 --( 1 )-- 4
[4] = 1 --( 1 )-- 5

Node 2 with 3 incident edges
[1] = 0 --( 1 )-- 2
[5] = 2 --( 1 )-- 5
[6] = 2 --( 1 )-- 6

Node 3 with 3 incident edges
[2] = 0 --( 1 )-- 3
[7] = 3 --( 1 )-- 6
[8] = 3 --( 1 )-- 4

Node 4 with 2 incident edges
[3] = 1 --( 1 )-- 4
[8] = 3 --( 1 )-- 4

Node 5 with 2 incident edges
[4] = 1 --( 1 )-- 5
[5] = 2 --( 1 )-- 5

Node 6 with 2 incident edges
[6] = 2 --( 1 )-- 6
[7] = 3 --( 1 )-- 6

Edges
[0] = 0 --( 1 )-- 1
[1] = 0 --( 1 )-- 2
[2] = 0 --( 1 )-- 3
[3] = 1 --( 1 )-- 4
[4] = 1 --( 1 )-- 5
[5] = 2 --( 1 )-- 5
[6] = 2 --( 1 )-- 6
[7] = 3 --( 1 )-- 6
[8] = 3 --( 1 )-- 4
[GroupManager] add group GroupEdges
[GroupManager] add group GroupSteinerTreeCuts
[MIPSolver] number of variables   = 9
[MIPSolver] number of constraints = 56
[MIPSolver] Problem solved in 5 milliseconds.
[MIPSolver] optimal objective value = 4
[GroupManager] compute solution for group GroupEdges

Solution GroupEdges
Edge[0] = {(0, 1), weight = 1.000000} (0), Net[0] = {name = net_0, terminals = {0, 4, 5, 6}, weight = 1.000000} : 0.5
Edge[1] = {(0, 2), weight = 1.000000} (1), Net[0] = {name = net_0, terminals = {0, 4, 5, 6}, weight = 1.000000} : 0
Edge[2] = {(0, 3), weight = 1.000000} (2), Net[0] = {name = net_0, terminals = {0, 4, 5, 6}, weight = 1.000000} : 0.5
Edge[3] = {(1, 4), weight = 1.000000} (3), Net[0] = {name = net_0, terminals = {0, 4, 5, 6}, weight = 1.000000} : 0.5
Edge[4] = {(1, 5), weight = 1.000000} (4), Net[0] = {name = net_0, terminals = {0, 4, 5, 6}, weight = 1.000000} : 1
Edge[5] = {(2, 5), weight = 1.000000} (5), Net[0] = {name = net_0, terminals = {0, 4, 5, 6}, weight = 1.000000} : 0
Edge[6] = {(2, 6), weight = 1.000000} (6), Net[0] = {name = net_0, terminals = {0, 4, 5, 6}, weight = 1.000000} : 0
Edge[7] = {(3, 6), weight = 1.000000} (7), Net[0] = {name = net_0, terminals = {0, 4, 5, 6}, weight = 1.000000} : 1
Edge[8] = {(3, 4), weight = 1.000000} (8), Net[0] = {name = net_0, terminals = {0, 4, 5, 6}, weight = 1.000000} : 0.5

[GroupManager] compute solution for group GroupSteinerTreeCuts
[GroupManager] add group GroupEdges
[GroupManager] add group GroupSteinerTreeCuts
[MIPSolver] number of variables   = 9
[MIPSolver] number of constraints = 56
[MIPSolver] Problem solved in 31 milliseconds.
[MIPSolver] optimal objective value = 5
[GroupManager] compute solution for group GroupEdges

Solution GroupEdges
Edge[0] = {(0, 1), weight = 1.000000} (0), Net[0] = {name = net_0, terminals = {0, 4, 5, 6}, weight = 1.000000} : 0
Edge[1] = {(0, 2), weight = 1.000000} (1), Net[0] = {name = net_0, terminals = {0, 4, 5, 6}, weight = 1.000000} : 1
Edge[2] = {(0, 3), weight = 1.000000} (2), Net[0] = {name = net_0, terminals = {0, 4, 5, 6}, weight = 1.000000} : 0
Edge[3] = {(1, 4), weight = 1.000000} (3), Net[0] = {name = net_0, terminals = {0, 4, 5, 6}, weight = 1.000000} : 1
Edge[4] = {(1, 5), weight = 1.000000} (4), Net[0] = {name = net_0, terminals = {0, 4, 5, 6}, weight = 1.000000} : 1
Edge[5] = {(2, 5), weight = 1.000000} (5), Net[0] = {name = net_0, terminals = {0, 4, 5, 6}, weight = 1.000000} : 1
Edge[6] = {(2, 6), weight = 1.000000} (6), Net[0] = {name = net_0, terminals = {0, 4, 5, 6}, weight = 1.000000} : 1
Edge[7] = {(3, 6), weight = 1.000000} (7), Net[0] = {name = net_0, terminals = {0, 4, 5, 6}, weight = 1.000000} : 0
Edge[8] = {(3, 4), weight = 1.000000} (8), Net[0] = {name = net_0, terminals = {0, 4, 5, 6}, weight = 1.000000} : 0

[GroupManager] compute solution for group GroupSteinerTreeCuts
instances/undirected_cut_based/solution_undirected_cut_based.json
{
    "problem": {
        "graph": {
            "directed": false,
            "edges": [
                {
                    "head": 1,
                    "id": 0,
                    "tail": 0,
                    "weight": 1.0
                },
                {
                    "head": 2,
                    "id": 1,
                    "tail": 0,
                    "weight": 1.0
                },
                {
                    "head": 3,
                    "id": 2,
                    "tail": 0,
                    "weight": 1.0
                },
                {
                    "head": 4,
                    "id": 3,
                    "tail": 1,
                    "weight": 1.0
                },
                {
                    "head": 5,
                    "id": 4,
                    "tail": 1,
                    "weight": 1.0
                },
                {
                    "head": 5,
                    "id": 5,
                    "tail": 2,
                    "weight": 1.0
                },
                {
                    "head": 6,
                    "id": 6,
                    "tail": 2,
                    "weight": 1.0
                },
                {
                    "head": 6,
                    "id": 7,
                    "tail": 3,
                    "weight": 1.0
                },
                {
                    "head": 4,
                    "id": 8,
                    "tail": 3,
                    "weight": 1.0
                }
            ],
            "weighted": true
        },
        "nets": [
            {
                "id": 0,
                "name": "net_0",
                "terminals": [
                    0,
                    4,
                    5,
                    6
                ]
            }
        ]
    },
    "solution": {
        "continuous": {
            "edges": {
                "0": 0.5,
                "1": 0.0,
                "2": 0.5,
                "3": 0.5,
                "4": 1.0,
                "5": 0.0,
                "6": 0.0,
                "7": 1.0,
                "8": 0.5
            },
            "optimization": {
                "objective_value": 4.0,
                "problem": "LP",
                "type": "min"
            }
        },
        "integer": {
            "edges": {
                "0": 0.0,
                "1": 1.0,
                "2": 0.0,
                "3": 1.0,
                "4": 1.0,
                "5": 1.0,
                "6": 1.0,
                "7": 0.0,
                "8": 0.0
            },
            "optimization": {
                "objective_value": 5.0,
                "problem": "MIP",
                "type": "min"
            }
        }
    }
}

