{
    "solution": {
        "continuous": {
            "optimization": {
                "objective_value": 19.6666666666667,
                "problem": "LP",
                "type": "max"
            },
            "variables": {
                "GroupSimplexEmbedding": {
                    "nodes": [
                        {
                            "node": "0",
                            "value_per_terminal": [
                                1.33333333333333,
                                1.0,
                                8.66666666666667
                            ]
                        },
                        {
                            "node": "1",
                            "value_per_terminal": [
                                0.0,
                                11.0,
                                0.0
                            ]
                        },
                        {
                            "node": "2",
                            "value_per_terminal": [
                                11.0,
                                0.0,
                                0.0
                            ]
                        },
                        {
                            "node": "3",
                            "value_per_terminal": [
                                4.0,
                                6.0,
                                1.0
                            ]
                        },
                        {
                            "node": "4",
                            "value_per_terminal": [
                                5.0,
                                6.0,
                                0.0
                            ]
                        },
                        {
                            "node": "5",
                            "value_per_terminal": [
                                3.0,
                                6.0,
                                2.0
                            ]
                        },
                        {
                            "node": "6",
                            "value_per_terminal": [
                                3.66666666666667,
                                5.33333333333333,
                                2.0
                            ]
                        },
                        {
                            "node": "7",
                            "value_per_terminal": [
                                6.0,
                                4.0,
                                1.0
                            ]
                        },
                        {
                            "node": "8",
                            "value_per_terminal": [
                                6.0,
                                5.0,
                                0.0
                            ]
                        },
                        {
                            "node": "9",
                            "value_per_terminal": [
                                5.33333333333333,
                                3.66666666666667,
                                2.0
                            ]
                        },
                        {
                            "node": "10",
                            "value_per_terminal": [
                                6.0,
                                3.0,
                                2.0
                            ]
                        },
                        {
                            "node": "11",
                            "value_per_terminal": [
                                1.33333333333333,
                                6.0,
                                3.66666666666667
                            ]
                        },
                        {
                            "node": "12",
                            "value_per_terminal": [
                                2.33333333333333,
                                5.66666666666667,
                                3.0
                            ]
                        },
                        {
                            "node": "13",
                            "value_per_terminal": [
                                2.66666666666667,
                                4.66666666666667,
                                3.66666666666667
                            ]
                        },
                        {
                            "node": "14",
                            "value_per_terminal": [
                                3.66666666666667,
                                4.33333333333333,
                                3.0
                            ]
                        },
                        {
                            "node": "15",
                            "value_per_terminal": [
                                4.0,
                                3.33333333333333,
                                3.66666666666667
                            ]
                        },
                        {
                            "node": "16",
                            "value_per_terminal": [
                                3.33333333333333,
                                4.0,
                                3.66666666666667
                            ]
                        },
                        {
                            "node": "17",
                            "value_per_terminal": [
                                4.33333333333333,
                                3.66666666666667,
                                3.0
                            ]
                        },
                        {
                            "node": "18",
                            "value_per_terminal": [
                                4.66666666666667,
                                2.66666666666667,
                                3.66666666666667
                            ]
                        },
                        {
                            "node": "19",
                            "value_per_terminal": [
                                5.66666666666667,
                                2.33333333333333,
                                3.0
                            ]
                        },
                        {
                            "node": "20",
                            "value_per_terminal": [
                                6.0,
                                1.33333333333333,
                                3.66666666666667
                            ]
                        }
                    ],
                    "simplex": 11.0
                }
            }
        },
        "integer": {
            "optimization": {
                "objective_value": 20.0,
                "problem": "MIP",
                "type": "min"
            },
            "variables": {
                "GroupEdges": {
                    "bidirected edges": {
                        "Edge[0] = {(0, 11), weight = 5.000000}": 1.0,
                        "Edge[10] = {(0, 20), weight = 5.000000}": 0.0,
                        "Edge[11] = {(20, 0), weight = 5.000000}": 1.0,
                        "Edge[12] = {(1, 4), weight = 5.000000}": 0.0,
                        "Edge[13] = {(4, 1), weight = 5.000000}": 0.0,
                        "Edge[14] = {(1, 5), weight = 5.000000}": 0.0,
                        "Edge[15] = {(5, 1), weight = 5.000000}": 0.0,
                        "Edge[16] = {(1, 11), weight = 5.000000}": 0.0,
                        "Edge[17] = {(11, 1), weight = 5.000000}": 1.0,
                        "Edge[18] = {(1, 16), weight = 7.000000}": 0.0,
                        "Edge[19] = {(16, 1), weight = 7.000000}": 0.0,
                        "Edge[1] = {(11, 0), weight = 5.000000}": 0.0,
                        "Edge[20] = {(2, 8), weight = 5.000000}": 0.0,
                        "Edge[21] = {(8, 2), weight = 5.000000}": 0.0,
                        "Edge[22] = {(2, 10), weight = 5.000000}": 0.0,
                        "Edge[23] = {(10, 2), weight = 5.000000}": 0.0,
                        "Edge[24] = {(2, 15), weight = 7.000000}": 0.0,
                        "Edge[25] = {(15, 2), weight = 7.000000}": 0.0,
                        "Edge[26] = {(2, 20), weight = 5.000000}": 1.0,
                        "Edge[27] = {(20, 2), weight = 5.000000}": 0.0,
                        "Edge[28] = {(3, 4), weight = 1.000000}": 0.0,
                        "Edge[29] = {(4, 3), weight = 1.000000}": 0.0,
                        "Edge[2] = {(0, 13), weight = 5.000000}": 0.0,
                        "Edge[30] = {(3, 5), weight = 1.000000}": 0.0,
                        "Edge[31] = {(5, 3), weight = 1.000000}": 0.0,
                        "Edge[32] = {(3, 6), weight = 1.000000}": 0.0,
                        "Edge[33] = {(6, 3), weight = 1.000000}": 0.0,
                        "Edge[34] = {(7, 8), weight = 1.000000}": 0.0,
                        "Edge[35] = {(8, 7), weight = 1.000000}": 0.0,
                        "Edge[36] = {(7, 9), weight = 1.000000}": 0.0,
                        "Edge[37] = {(9, 7), weight = 1.000000}": 0.0,
                        "Edge[38] = {(7, 10), weight = 1.000000}": 0.0,
                        "Edge[39] = {(10, 7), weight = 1.000000}": 0.0,
                        "Edge[3] = {(13, 0), weight = 5.000000}": 0.0,
                        "Edge[40] = {(4, 8), weight = 1.000000}": 0.0,
                        "Edge[41] = {(8, 4), weight = 1.000000}": 0.0,
                        "Edge[42] = {(5, 12), weight = 1.000000}": 0.0,
                        "Edge[43] = {(12, 5), weight = 1.000000}": 0.0,
                        "Edge[44] = {(6, 14), weight = 1.000000}": 0.0,
                        "Edge[45] = {(14, 6), weight = 1.000000}": 0.0,
                        "Edge[46] = {(9, 17), weight = 1.000000}": 0.0,
                        "Edge[47] = {(17, 9), weight = 1.000000}": 0.0,
                        "Edge[48] = {(10, 19), weight = 1.000000}": 0.0,
                        "Edge[49] = {(19, 10), weight = 1.000000}": 0.0,
                        "Edge[4] = {(0, 15), weight = 5.000000}": 0.0,
                        "Edge[50] = {(12, 11), weight = 1.000000}": 0.0,
                        "Edge[51] = {(11, 12), weight = 1.000000}": 0.0,
                        "Edge[52] = {(12, 13), weight = 1.000000}": 0.0,
                        "Edge[53] = {(13, 12), weight = 1.000000}": 0.0,
                        "Edge[54] = {(14, 13), weight = 1.000000}": 0.0,
                        "Edge[55] = {(13, 14), weight = 1.000000}": 0.0,
                        "Edge[56] = {(14, 15), weight = 1.000000}": 0.0,
                        "Edge[57] = {(15, 14), weight = 1.000000}": 0.0,
                        "Edge[58] = {(17, 16), weight = 1.000000}": 0.0,
                        "Edge[59] = {(16, 17), weight = 1.000000}": 0.0,
                        "Edge[5] = {(15, 0), weight = 5.000000}": 0.0,
                        "Edge[60] = {(17, 18), weight = 1.000000}": 0.0,
                        "Edge[61] = {(18, 17), weight = 1.000000}": 0.0,
                        "Edge[62] = {(19, 18), weight = 1.000000}": 0.0,
                        "Edge[63] = {(18, 19), weight = 1.000000}": 0.0,
                        "Edge[64] = {(19, 20), weight = 1.000000}": 0.0,
                        "Edge[65] = {(20, 19), weight = 1.000000}": 0.0,
                        "Edge[6] = {(0, 16), weight = 5.000000}": 0.0,
                        "Edge[7] = {(16, 0), weight = 5.000000}": 0.0,
                        "Edge[8] = {(0, 18), weight = 5.000000}": 0.0,
                        "Edge[9] = {(18, 0), weight = 5.000000}": 0.0
                    },
                    "undirected edges": {
                        "Edge[0] = {(0, 11), weight = 5.000000}": 1.0,
                        "Edge[10] = {(2, 8), weight = 5.000000}": 0.0,
                        "Edge[11] = {(2, 10), weight = 5.000000}": 0.0,
                        "Edge[12] = {(2, 15), weight = 7.000000}": 0.0,
                        "Edge[13] = {(2, 20), weight = 5.000000}": 1.0,
                        "Edge[14] = {(3, 4), weight = 1.000000}": 0.0,
                        "Edge[15] = {(3, 5), weight = 1.000000}": 0.0,
                        "Edge[16] = {(3, 6), weight = 1.000000}": 0.0,
                        "Edge[17] = {(7, 8), weight = 1.000000}": 0.0,
                        "Edge[18] = {(7, 9), weight = 1.000000}": 0.0,
                        "Edge[19] = {(7, 10), weight = 1.000000}": 0.0,
                        "Edge[1] = {(0, 13), weight = 5.000000}": 0.0,
                        "Edge[20] = {(4, 8), weight = 1.000000}": 0.0,
                        "Edge[21] = {(5, 12), weight = 1.000000}": 0.0,
                        "Edge[22] = {(6, 14), weight = 1.000000}": 0.0,
                        "Edge[23] = {(9, 17), weight = 1.000000}": 0.0,
                        "Edge[24] = {(10, 19), weight = 1.000000}": 0.0,
                        "Edge[25] = {(12, 11), weight = 1.000000}": 0.0,
                        "Edge[26] = {(12, 13), weight = 1.000000}": 0.0,
                        "Edge[27] = {(14, 13), weight = 1.000000}": 0.0,
                        "Edge[28] = {(14, 15), weight = 1.000000}": 0.0,
                        "Edge[29] = {(17, 16), weight = 1.000000}": 0.0,
                        "Edge[2] = {(0, 15), weight = 5.000000}": 0.0,
                        "Edge[30] = {(17, 18), weight = 1.000000}": 0.0,
                        "Edge[31] = {(19, 18), weight = 1.000000}": 0.0,
                        "Edge[32] = {(19, 20), weight = 1.000000}": 0.0,
                        "Edge[3] = {(0, 16), weight = 5.000000}": 0.0,
                        "Edge[4] = {(0, 18), weight = 5.000000}": 0.0,
                        "Edge[5] = {(0, 20), weight = 5.000000}": 1.0,
                        "Edge[6] = {(1, 4), weight = 5.000000}": 0.0,
                        "Edge[7] = {(1, 5), weight = 5.000000}": 0.0,
                        "Edge[8] = {(1, 11), weight = 5.000000}": 1.0,
                        "Edge[9] = {(1, 16), weight = 7.000000}": 0.0
                    }
                },
                "GroupMultiCommodityFlow": null
            }
        }
    }
}
